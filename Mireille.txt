#------------------------------------------------------------------------------#
# 'Mireille' Bulletin Board System
#
# $Id$
# http://airemix.site.ne.jp/
# naruse@airemix.site.ne.jp
# Scripted by NaRuSe.
# "This file is written in shift_jis, CRLF." 空
#------------------------------------------------------------------------------#

<!--◇設置説明は同梱のMireille.htmlを参照ください-->

◇設置？
必須ファイルだけ。
/bbs/
/bbs/index.cgi 755
/bbs/core.pl
/bbs/style.pl
/bbs/style.css
/bbs/log/      777
/bbs/log/0.cgi 666 or そのまま
メモ：ログファイルの拡張子は*.cgiでもOKになりました


◇Mireille History
2001-10-19  Revision 1.2.1.1
全面的に改修
2001-10-08  Revision 1.2.0.7
+manage.cgi
 ZeroFile回復モード追加
+core.pl,style.pl
 書き込みフォームをとりあえず切り出してみる
2001-10-04  Revision 1.2.0.6
+manage.cgi
 アイコン見本周辺のHTMLのミスを修正
+style.pl
 題名のショートカットキーを0->j
+style.css
 .AiremixCopy新設(それぞれにこれに伴う変更)
 コメントを一部調整
2001-10-02  Revision 1.2.0.5
デザイン関連の修正を全体的に
2001-10-01  Revision 1.2.0.4
西名さんによるデザイン調整
caution -> note #変数名がnoteだったので
td.title->th.title #題名系はthしたいという個人的な好みより
style.cssで使っていないところを一部削除
+index.cgi
 アイコンヘッダフッタを移動
+core.pl
 検索機能が壊れていたのを修正
 記事修正部の処理を調整
 Passwordの文字数制限を1-30文字から1-24文字に
 管理Passは文字数制限をなくした
+manage.cgi
 index.cgi,style.plから読み込んでアイコン一覧を生成できるように
2001-09-28  Revision 1.2.0.3
+core.pl
 修正機能が使えなかったのを修正
 題名の引用がうまくできていないのを修正
 マスターパスで削除しようとすると親記事の画面が出るバグを修正
2001-09-27  Revision 1.2.0.2
+index.cgi,style.pl,core.pl
 Perl5.6未満で動かないのを修正
 エラー捕獲を訂正
2001-09-26  Revision 1.2.0.1
+index.cgi
 今までのconfig.plのシステム設定を切り出したもの
+core.pl
 今までのindex.cgiを外部にした
+style.pl
 旧index.cgiと旧config.plのデザインに関する部分を切り出したもの

2001-09-23  Revision 1.1.3.8
+manage.cgi
 アイコン一覧で著作権表示を確実にできるようにした
2001-09-23  Revision 1.1.3.7
+index.cgi
 修正ができないバグを修正
+config.pl
 タイムゾーン情報が欠落していたのを修正
2001-09-21  Revision 1.1.3.6
+index.cgi
 返信ができないバグを修正^^;;
2001-09-21  Revision 1.1.3.5
+index.cgi
 splitを使っていたところを一部正規表現に置き換える
 sort部分を高速化
 FHをIN=>RD,OUT=>RWに
 ftp URL の正規表現を修正
 書き込み部を見やすいように書き直した
 config,logの拡張子を.pl以外に.cgiでもできるようにした
 Error捕獲部調整
+manage.cgi
 config,logの拡張子を.pl以外に.cgiでもできるようにした
 Error捕獲部調整
+config.pl
 「アイコン」にアイコン一覧へのリンクを張ってみた
  パスワード欄のサイズが心なしか大きかったので縮小してみた
2001-09-13  Revision 1.1.3.4
+manage.cgi
 自ファイル名の取得法を変更
2001-09-09  Revision 1.1.3.3 <- Release 1.1.1
+index.cgi
 最初のPerlバージョンチェックをuseからrequireに修正
 エラー画面を強化
+manage.cgi
 「Indexに新規投稿フォームを表示」に対応（今度こそ
 config.plのバージョンを新設
 エラー画面を強化
+convert11.cgi
 適当だったつくりを大幅に修正^^;;
2001-09-08  Revision 1.1.3.2
+index.cgi
 HOME部の"http://"のみのときを調整
+manage.cgi
 「Indexに新規投稿フォームを表示」に再対応
 アイコン見本のヘッダー/フッターをconfig.plに統合
+config.pl
 初期状態の許可タグにRUBY系を追加
 （これも悪用されることはないと思うので）
+notify.pl
 初期状態のメールアドレスを「いかにもサンプル」っぽくした
 機能的な変更はありません
+Mireille.html
 パーミッション周りのヘルプ追記
2001-09-03  Revision 1.1.3.1 <- Release 1.1.0
+index.cgi
 ページ番号表示部修正
+style.css
 reviseをデフォルトで「なし」に
2001-09-02  Revision 1.1.2.3
+index.cgi
 titleの文字制限を100->80
 ページ番号表示部を「1<<基本20件>>最後」とした
 記事自動削除がぼろぼろだったのを直した^^;;
+config.pl
 子記事の「修正」のtitleが間違っていたのを修正
+style.css
 span.revise新設
 記事番号をvertical-align: middle;
2001-09-01  Revision 1.1.2.2
+index.cgi
 項目部分の致命的バグを修正^^;;
 icon選択部にnote02
+manage.cgi
 選択型項目の設定が壊れているバグを修正
 icon見本のHTMLを修正
+config.pl
 標準デザイン、親記事子記事を変更
+style.css
 親記事子記事周りのCSSを変更
2001-08-31  Revision 1.1.2.1
バージョン表記を変更
一身上の都合により改行コードをCRLFに統一
+index.cgi
 クッキー部分のバグ修正
 任意に項目を追加できるようにする設定をconfig.plに
+manage.cgi
 CONFIGの項目表示処理を追加しやすいように変更
 CONFIGに処理項目設定を追加
+notify.pl
 sendmail.plからファイル名変更
2001-08-29  1.1.0α08
+index.cgi
 任意項目追加機能実装
2001-08-28  1.1.0α07
+index.cgi
 処理調整
+sendmail.pl
 動かなかった^^;;
2001-08-27  1.1.0α06
+index.cgi
 IconSharpを修正
+sendmail.pl
 自分の投稿はメールを送らない
2001-08-24  1.1.0α05
+index.cgi
 汚染除去を強化
 修正/削除 の一覧表示で、最後の文字が壊れていることがある問題を修正
 0.pl情報の読み取り方の間違いを修正
 「キャンセル」のアクセスキーを廃止
+manage.cgi
 0.pl情報の読み取り方の間違いを修正
2001-08-22  1.1.0α04
+index.cgi
 変数周りを微調整＆エラー時の情報をもうちょっとまともに
+manage.cgi
 親記事削除時の仕様を変更
 一部表記・デザインを変更
+config.pl
 親記事削除時の仕様変更に伴い仕様を変更しました
 manage.cgiから再設定を行ってください
 今日の謎バグ＠標準config.pl
  Cookieのない人にお知らせする期間(秒)は24時間のはずですが・・・
  間違ってました^^;; 76800秒でなく、86400秒が正しいです
2001-08-21  1.1.0α03
+index.cgi
 split関数周辺の処理調整
 記事表示周りの仕様変更：処理速度大幅向上(///
 「OK」のアクセスキーを"o"にした
 「キャンセル」のアクセスキーを"c"にした
 記事削除の処理のバグを修正
+manage.cgi
 デザインに幅を持たせられるようにする修正
 「_HTML_」とprint<<"_HTML_";をうまく使えば、動的処理をデザインとしてつかえる
 フォーム表示周りで活躍する、かも
+config.pl
  HTML部で仕様を変更。
  $DT{''} -> $DT{''}
  $_      -> $DT{'j'}
  となります
 「OK」のアクセスキーを"o"にした
 「キャンセル」のアクセスキーを"c"にした
2001-08-18  1.1.0α02
+index.cgi
 パスワード部修正
+manage.cgi
 「その他」をアイコン見本にだす処理を変更
2001-08-18  1.1.0α01
+index.cgi
 Mir1型のログ形式に対応
 パスワード仕様変更
 エラー捕獲を訂正
+convert11.cgi
 試作版
 ログ形式をTSV型から、Mir1型に変換する
 index.cgiと同じディレクトリにindex.cgiと同じパーミッションで設置して、ブラウザからアクセスすればOK
 0.plおよび*.plを拡張子.bakにバックアップしつつ変換するので少し安心
 変換したものを再度変換しようとしても「変更済み」とはじいて、さらに安心
+manage.cgi
 アイコンリストの入力形式にSharp区切りを導入
 ログ管理の削除方法に「ファイル名変更」を追加
 ログ管理に「ファイル名変更」で削除したファイルのバックアップを一掃する機能の追加
2001-08-15  1.0.9
 削除モード＋管理パスワードでスレッド削除できるように変更
 そのほかバグ修正
2001-08-14  1.0.8
 ページ表示部の処理を1.0.7仕様に最適化
 全体的にちまっと表記変更
 style.css 128行目を「strong{」から「strong.pgsl{」に変更
2001-08-11  1.0.7
 文字参照を全面的に許可するように変更
 一部タグを許可できるように変更
 未読スレッドが20件以上になった場合は、記事番号の大きい方から20件のみ知らせる
 ページ総数が20ページ以上になった場合は現在を中心に20ページ+最初＋最後にする
 こそこそと1.1.0に向けた伏線作り
2001-08-03  1.0.6
 新規投稿した後に多重投稿されてしまったバグを修正
 マスターパスで削除できない不具合を修正
2001-08-01  1.0.5
 NN4.xで返信が出来ない不具合を修正
2001-07-30  1.0.4
 CSSの間違いの修正
 URLエンコードを修正
2001-07-28  1.0.3
 ResFormへの飛び方を変更(<a name="ResForm" />をフォーム名の左側にでも) 
 ブラウザ判別部を変更（MSIE3とNN4にはCSSを渡さない)
 ページ選択周りのCSSを変更
 LastPostから直接記事に飛ぶようにした
 一つ一つの記事にnameをつけた
 0.plの仕様変更（$IN{'i'}\t・・・→$IN{'i'}-$IN{'j'}\t・・・）
 他細かい表示周りの修正
2001-07-23  1.0.2
 親記事は来客者には削除できないようにしました
2001-07-22  1.0.1
 index.cgiの475行目で$CF{'delpg'}に5を代入していたのを削除^^;;
 「この記事に返信する」で返信フォームが画面に表示されるように
 一部のコメントを変更
 またもパスワード回りのアルゴリズムがおかしいことが発覚（汗
 　でもセキュリティには問題ないのでそのままに（ぉ
 　本来の暗号化後の長さの倍になってます、、、
 実験的にそのページのスレッドの一覧を表示
 マスターパスが使えなくなっていた不具合を修正
2001-07-21  1.0.0  正式版

#------------------------------------------------------------------------------#
§まだヘルプに載っていない説明
◇セキュリティに関して〜パーミッションや.htaccess〜
Mireilleはログファイル・設定ファイルを拡張子plで保存していますが、
これらのファイルは一部のサーバーではそのままHTTP上から見られてしまいます
これはセキュリティ上けっこう危険ですし、個人情報の漏えいにもつながるので、
ログ・設定ファイルをみられないようにしましょう

・「.htaccess」を置く方法
Mireilleの圧縮ファイルに同梱している「.htaccess」という名前のファイルを、
index.cgiと同じディレクトリに設置すればみられなくなります
しかし一部のサーバーではhtaccessの設置が許可されていないので、使えない場合があります

・見られたら困るファイルの置き場所を変える
Web上から見れるようにするファイルはpublic_html下においてください
というサーバーでは、これがもっとも有効かもしれません
たとえば、

/
/public_html/ 〜いろいろとページのファイル
/public_html/bbs/ 〜Mireilleの設置場所

のように今なっている場合

/
/public_html/ 〜いろいろとページのファイル
/public_html/bbs/ 〜Mireilleの設置場所
/Mireille/
/Mireille/log/
/Mireille/config.pl

のようにconfig.plとlogディレクトリをWeb上から見ることができない場所におき、
config.plの

$CF{'log'}  = './log/'; #LOG PATH

とあるところを

$CF{'log'}  = '../../Mireille/log/'; #LOG PATH

のようにします(実際の環境によって変えてください）
さらに、index.cgiとmanage.cgi内をエディタの置換機能で「./config.pl」を「../../Mireille/config.pl」
に置き換えれば大丈夫です
CGIを新しいバージョンに変えるときは、最後の置換作業だけ毎回やってください。

◇サーバー別情報（メモ）
http://www.ccsnet.ne.jp/
1.「#!/usr/bin/perl」
2.htaccess非対応
3.CGIパーミッションは755
・管理人権限で稼動
・plは実行される
・「/usr/lib/sendmail」
http://kingdom.biglobe.ne.jp/help/shiyou2.html
1.「#!/usr/local/bin/perl5」
2.htaccess非対応

cool.ne.jp
1.「#!/usr/bin/perl」
2.htaccess対応
全てOK

infoseek isweb(Freeweb)
1.「#!usr/local/bin/perl」
2.htaccess非対応
3.CGIパーミッションは755
・ディレクトリは777
・ディレクトリ丸見え
・plは実行されない
・cgi-binディレクトリ以下のみCGI動作

◇アイコンまわり
・config.plのアイコンディレクトリ設定
$CF{'icon'}の設定は最後に/を含めてください

・アイコン編集
タグ方式とSharp方式があります

タグ方式はHTML4に基づいた形で、SELECTタグ内の要素を羅列するだけです
管理CGIはその中のOPTGROUPとOPTIONタグを認識して、アイコン見本を作製してくれます
とりあえず例を、
<optgroup label="グループ名">
  <option value="アイコンファイル名">アイコン名</option>
  <option value="アイコンファイル名">アイコン名</option>
</optgroup>
<!-- Visual Art's/Key -->
<optgroup label="Kanon">
  <option value="ayu.png">月宮あゆ</option>
  <option value="akiko.png">水瀬秋子</option>
  <option value="kaori.gif ">美坂香里</option>
  <option value="makoto.gif">沢渡真琴</option>
  <option value="misio.gif ">天野美汐</option>
  <option value="nayuki.gif">水瀬名雪</option>
  <option value="sayuri.gif">倉田佐由里</option>
  <option value="siori.gif ">美坂栞</option>
</optgroup>
HTML4の仕様上はOPTIONタグは終了タグを省略できるはずですが、
Mireilleでは省略した場合の動作は保証しませんｗ
ちなみに、OPTGROUPタグは入れ子にできない（<optgroup><optgroup>とできない）
ので注意しましょう
これはHTML4の仕様なので、入れ子をサポートする予定は当分ありません
・・・HTML4の仕様のせいにしてたりなんかしません（ｗ

Sharp方式はその名の通り、"#"を使う方式です
これも例を見たほうが早いでしょう
タグ方式と見比べてみてください
#グループ名
  アイコンファイル名#アイコン名
#
<!-- Visual Art's/Key -->
#Kanon
  ayu.gif#月宮あゆ
  akiko.gif#水瀬秋子
  kaori.gif#美坂香里
  makoto.gif#沢渡真琴
  misio.gif#天野美汐
  nayuki.gif#水瀬名雪
  sayuri.gif#倉田佐由里
  siori.gif#美坂栞
#
という感じです
"#"だけの行がある場合はそれをOPTGROUPの終了タグとみなすわけです

◇CONFIGのHTMLデザイン部について
かなりの自由度でデザインを変更することが出来ます
また、メニュー$CF{'menu'}、記事$CF{'artprt'},$CF{'artchd'},$CF{'artfot'}、
投稿フォーム$CF{'wrtfm'},$CF{'resfm'}のデザイン部では、
以下の変数を使うことが出来ます
　記事番号：$DT{'i'}
　返信番号：$DT{'j'}
　名前：$DT{'name'}
　題名：$DT{'title'}
　メールアドレス：$DT{'email'}
　ホームページアドレス：$DT{'home'}
　投稿日時（"????年??月??日(？) ??時??分"型）：$DT{'date'}
　本文：$DT{'mes'}
　アイコン：$DT{'icon'}
　パスワード：$DT{'pass'}
　コマンド：$DT{'cmd'}
これら以外にも使える変数が存在することはしますが、使うべきものかどうかは微妙です


#------------------------------------------------------------------------------#
◇特筆すべき注意
・文字化けするときは
　Mireilleは、このMireille.txtとs_help.htmlを除いて全て、
　EUCという漢字コード書かれています
　そのため、メモ帳を筆頭とする、EUC非対応のエディタでは編集することが出来ません
　EUC対応のエディタをご使用ください
　以下は推奨するエディタです
　さくらエディタ http://sakura-editor.sourceforge.net/
　TeraPad http://www2s.biglobe.ne.jp/~t-susumu/toclip/
　秀丸エディタ http://hidemaru.xaxon.co.jp/
　他にもEmEditorやWZEdiotr,Peggyなどが対応しています
　特に本格的にやるならば、色分けをしてくれるエディタだと格段に、
　効率が上がり、かつミスも減ると思います
・ファイル名変更の勧め
　Mireilleの管理CGIは非常に強い権限をもっているため、
　悪意の第三者にアクセスされた場合、非常に危険です
　必ずファイル名を変更しましょう
・ファイル名変更の制限
　スタイルシートのファイル名は、
　必ず[_a-zA-Z0-9]*.cssという形式である必要があります
　つまり、-=~<>\などの記号や日本語名は使えません
・詳しい説明は同梱のMireille.htmlを参照ください

#------------------------------------------------------------------------------#
◇すでに実装済みの機能
・レスがつけられる
・アイコンがつけられる
・新しい記事があると教えてくれる
・過去ログは理論上無限に保存可能
・HTML 4.01 Strict(http://validation.w3.org/)にそこそこ準拠
　CSS2(http://jigsaw.w3.org/css-validator/)にそこそこ準拠
・記事の削除＆修正機能
・投稿の全検索機能
・WWWC/WWWDにHTTP Last-Modified対応

◇既知の問題
・MSIE以外ではToolTipの"\n"がちゃんと効かない
　現実的な対処法を模索中です・・・
・レイアウトにTABLEを多々使っている
　わかってはいるけど、やめられないんです^^;;
・StrictにないA targetを使っている
　これも削るのも微妙ですし、、どうしましょ

#------------------------------------------------------------------------------#
◇よくある疑問

・Q:"Can't open file."とMireilleが叫んでる〜;;
　A:logディレクトリ周りに設定ミスがある可能性が高いです
　　再度ファイルのパーミッションや存在を確認しなおしてください
　　また、CONFIG内のディレクトリ設定が'***/'と、/で終わっていないから、
　　という可能性もあります
・Q:文字化けしてます〜;;
　A:漢字コードがおそらくShift_JISになっています
　　MireilleはEUCを使っているのでEUCで保存しなおしてください
　　一部のファイルを除いて全ての他のファイルも同様です
　　「一部のファイル」がどれかは、最初から何行目かに
　　# "This file is written in shift_jis, CRLF." 空
　　のような行があるので、そこにどの漢字コードを使っているか書いてありますので、
　　それを参照してください
　　ちなみにこのファイルはShift_JISで保存してあります
・Q:それじゃなんでEUCを使うの？
　A:確かにShift_JISのほうが楽です
　　ほとんどの人はWindowsを使っているでしょうから、標準のShift_JISを使ったほうがいいですね
　　わたしも本当はWindows上での利便性を考えればShift_JISを使いたいです
　　ただ、Shift_JISだと一部の漢字においてCGI処理の中でうまく処理できないのです
　　具体的には、「print"能";」というコマンドでエラーが出ます
　　これはShift_JISでの「能」の16進文字コードが0x945cなため下の二つが、
　　0x5cである特殊文字「\」とかぶってしまうからです
　　このような文字は「能」「饅」など数十文字あります
　　回避策は何個かありますが、一番確実な回避策がEUCを使う、ということだったわけです
　　EUCにはこのようなエラーを誘発する文字が、無いように作られていますので
　　その意味では今流行の、世界中の全ての文字を一つに詰め込もうという無茶な規格、
　　Unicodeでもいいのですが、まだエディタ側の対応を見ると時期尚早だと思いますので^^;;
・Q:全てがわからない！ぜんぜん無理！
　A:とりあえず今はあきらめることをお勧めします
　　それが嫌な場合は親切かつ有能な友人に頼ってください^^;;

#------------------------------------------------------------------------------#
◇Mireilleの仕様
Mireilleの構造について、実装の手法からつらつらと書き連ねておきます
「ここが知りたい」という個所があれば、言ってくだされば優先的に記述します

・ログ形式
基本的にはTSVとname=valueの折衷である、
"name=\tvalue;\tname=\tvalue;\tname=\tvalue;\t"
という=\tと;\tで区切る方式を使っています
\tはタブ文字のことなので、展開され、
name=	value;	name=	value;	name=	value;	
のようになります
実際にMireilleのログとして保存する場合は最初に管理情報を埋め込み、
あとは任意のログ項目を列挙します
現在の「Mir1型」ログ形式だと、
Mir1=	;	name=	名前;	title=	テスト;	
と保存されます
保存したログから値を読み出す際には
my%DT=split(/[=;]\t/o,$_);
として一括してハッシュにつめこみ、あとは$DT{'name'}で呼び出すという
やっぱりこれも安易な方法です
将来的に項目ごとの検索（題名に'Millefeuille'を含む記事を含むスレッドを検索）を実装するときは
$sertch_word='Millefeuille';
$log=~m/\ttitle=\t$serch_word;\t/o;
とやれば、\tは区切りにしか含まれていないはずなので、必ず目的の項目が見つかります
前に\tのない、行の最初の項目はこれでは検索できませんが、
Mir1型では行頭は管理領域なので、普通の検索では扱いませんし、
アクセスする場合は/^Mir1/で検索するので、問題ありません

・アイコンリスト形式
長年の研究の結果導き出された、最良のリスト形式は、「そのままタグを列挙する」でした（笑
というわけで、SELECTタグ内に記述されるタグを列挙する、というわかりやすい形式になっています
また、グループ分けのためHTML4で策定されたOPTGROUPタグの利用を推奨しています
<optgroup label="グループ名">
  <option value="ファイル名">アイコン名</option>
</option>
Cookieを使って初期状態で選ばれるアイコンを選択する際には
=~s/value="Cookieにあるファイル名"/value="Cookieにあるファイル名" selected="selected"/
とやる安易な方法を用いています
この一見かつ適当に思えるリスト形式によって、大幅な高速化＆耐久性を実現・・・
しているような、気がします（ｗ（とりあえず700個のアイコンでそこそこの速度での動作を確認済）

・カスタマイズ
config.plに変数群%CFを用意することによって行っています
HTMLを記述することによって変えられるデザインはeval関数を使うことによって変数を普通に使えるように・・・
やっぱり適当といえば適当な仕様です
設定は、直接エディタで編集、管理CGI(manage.cgi)から操作、の2種類を用意しています
基本的にindex.cgiからconfig.plには常に下位互換性を確保しているため、
多くの場合はバージョンアップをしても問題なく動作するでしょう
config.plからの設定情報の読み込みは、config.plをPerl言語に則った形にすることで、
require'./config.pl';
ですませています
管理CGIからconfig.plへの書き込みは、地味にテンプレートのようなものを用意して、
それに代入しつつ書き込むというシンプルな方法です


#------------------------------------------------------------------------------#
◇お世話になったところ
・Another HTML-lint http://openlab.ring.gr.jp/k16/htmllint/
HTMLの検証に際し利用しました
心の準備をせずにここで調べてもらうと心臓に悪いです
・ARTEMIS http://www.artemis.ac/arrange/
IconPreviewはここからです、便利なので頂きました
新しい投稿があると教えてくれる〜もここのを見て、です
他にもいろいろと参考にしています
管理機能でここを見習う点は数多くあります
・erialarts. http://kano.vis.ne.jp/erial/
LastPostはここからの拝借です
これだけのレベルのDHTML機能は当分わたしには無理です^^;;
tableを使わずに表示させようとしているのも尊敬します
ここを見なかったら知らなかった機能が何個も・・・
・HTML鳩丸倶楽部 http://www.ne.jp/asahi/minazuki/bakera/html/hatomaru
ツッコミメインなHTML解説サイト、にわたしは見えました
「HTML 4.01 のみを、純粋に学問的な興味から研究」しているそうです
HTMLの構成に際して参考にしました
・jcode.pl http://www.srekcah.org/jcode/
日本語のPerlを扱う際にはかなりの頻度で使います
Mireille本体では横着しているので使っていませんが^^;;
・Jcode.pm http://openlab.ring.gr.jp/Jcode/index-j.html
jcode.plの後継でPerl5用PerlModuleとなっています
jcode.plの機能にUnicodeを扱う機能が追加されています
・KENT-WEB http://www.kent-web.com/
なにはともあれ日本のCGI/Perl界に与えた影響は少なくはないはずです
私個人では特にYYBOARD,YYCHATにはお世話になりました
きわめてとっつき易いCGIが多いです
・Perlメモ http://www.din.or.jp/~ohzaki/perl.htm
URI自動リンク機能をつけるに際し参考に・・・むしろ丸写しです（汗
PerlのTIPSとしてかなり高いレベルだと思います
・W3C HTML Validation Service http://validator.w3.org/
HTML規格の策定を行う団体、W3CによるHTML検証サービスです
Another HTML-lintよりチェック項目は少なめです
・とほほのWWW入門 http://wakusei.cplaza.ne.jp/twn/www.htm
HTML部、Perl部ともに時々リファレンス代わりにしました
なかなか載っていて便利です
それでも一部省略されているのが残念ですが、、
・Snowish Hills　http://snowish.cside8.com/
Mireilleを作りこむにあたって、有用なアドバイスや他と対抗可能な機能の助言などを頂きました
特に管理機能は西名さんに言われなければかなり貧弱なものになっていたでしょう^^;;
初期状態のデザインも西名さんのデザインをベースにしています
ちなみに、西名さんのサイト自体はKey系CGサイトです
・他にも意見を下さった方々、参考にしたサイト・CGIの作者さんに感謝します

Copyright (c) 2001 NARUSE Yui(Airemix). All rights reserved.
